{"version":3,"sources":["components/TopNavBar.js","components/RightColumn.js","components/LeftColumn.js","components/VoteButton.js","App.js","serviceWorker.js","index.js"],"names":["TopNavBar","props","react_default","a","createElement","RightColumn","className","Component","LeftColumn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","store","country","handleChange","bind","assertThisInitialized","event","setState","defineProperty","target","name","value","react_select_esm","options","label","type","onChange","VoteButton","ticked","console","log","href","onClick","handleClick","App","leftcolumn","rightcolumn","voteButton","components_TopNavBar","rel","components_LeftColumn","components_RightColumn","components_VoteButton","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAWeA,EARG,SAAEC,GACjB,OACGC,EAAAC,EAAAC,cAAA,wBCOSC,mLARX,OACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BAAf,kDAHoBC,oCCgDXC,cA7Cb,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMX,KACDe,MAAQ,CACXC,MAAO,QACPC,QAAS,aAGXT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAPHA,4EAUNa,GACXV,KAAKW,SAALb,OAAAc,EAAA,EAAAd,CAAA,GAAiBY,EAAMG,OAAOC,KAAQJ,EAAMG,OAAOE,yCAWnD,OACEzB,EAAAC,EAAAC,cAAA,OAAKE,UAAY,2BACfJ,EAAAC,EAAAC,cAAA,kEAGAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBACdJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,6BAClBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,wBAAjB,eACAJ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,QAfL,CACX,CAAEF,MAAO,QAASG,MAAO,SACzB,CAAEH,MAAO,aAAcG,MAAO,cAC9B,CAAEH,MAAO,SAAUG,MAAO,cAepB5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,wBAAjB,iBACAJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oCAAoCyB,KAAK,OAAOL,KAAK,UAAUC,MAAOf,KAAKI,MAAME,QAASc,SAAUpB,KAAKO,0BAtC/GZ,aC8BV0B,2BA3BX,SAAAA,EAAYhC,GAAO,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACfxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,KAAMX,KACDe,MAAQ,CACTkB,OAAQ,YAHGzB,6EAUf0B,QAAQC,IAAI,kBACZD,QAAQC,IAAIxB,KAAKI,MAAMkB,6EAQvB,OACIhC,EAAAC,EAAAC,cAAA,OAAKE,UAAY,aACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAY,+CAA+C+B,KAAK,KAAKC,QAAW1B,KAAK2B,aAA7F,uCAvBShC,cCqCViC,6MA9BbxB,MAAQ,CACNyB,WAAY,GACZC,YAAa,GACbC,WAAY,4EAIZ,OACEzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,+BAGAF,EAAAC,EAAAC,cAAA,KACEE,UAAU,WACV+B,KAAK,sBACLZ,OAAO,SACPoB,IAAI,yBAIR3C,EAAAC,EAAAC,cAAC0C,EAAD,MACA5C,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAC4C,EAAD,cA3BUzC,aCIE0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.866f51f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TopNavBar = ( props ) => {\n   return (\n      <div>\n         Menu bar\n      </div>\n   )\n}\n\nexport default TopNavBar;","import React, { Component } from 'react';\n\nclass RightColumn extends Component {\n  render() {\n    return(\n      <nav className=\"RightColumn pa4 black-80\">\n        We've found the following equivalent...\n      </nav>\n    )\n  }\n}\n\nexport default RightColumn;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass LeftColumn extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: 'coles',\n      country: 'australia'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name ]: event.target.value })\n  }\n\n  render() {\n\n    var stores = [\n      { value: 'coles', label: 'Coles' },\n      { value: 'dick smith', label: 'Dick Smith' },\n      { value: 'target', label: 'Target' }\n    ]\n\n    return (\n      <nav className = \"LeftColumn pa4 black-80\">\n        <div>\n          Enter the store you're finding an equivalent for...\n        </div>\n        <form className=\"measure center\">\n          <fieldset className=\"ba b--transparent ph0 mh0\">\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6 tl\">Store name:</label>\n              <Select options = {stores} />\n              {/* <input className=\"pa2 input-reset ba bg-transparent\" type=\"text\" name=\"store\" value={this.state.store} onChange={this.handleChange} /> */}\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6 tl\">Country name:</label>\n              <input className=\"pa2 input-reset ba bg-transparent\" type=\"text\" name=\"country\" value={this.state.country} onChange={this.handleChange} />\n            </div>\n          </fieldset>\n        </form>\n      </nav>\n    )\n  }\n}\n\nexport default LeftColumn;","import React, { Component} from 'react';\nimport '../css/App.css';\nimport '../css/tachyons.css';\n\nclass VoteButton extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ticked: 'unticked'\n        };\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleClick() {\n        // clicking on voting for association between stores\n        console.log('button pressed');\n        console.log(this.state.ticked);\n    }\n\n    onChange() {\n\n    }\n\n    render() {\n        return (\n            <div className = \"buttonPos\">\n                <button className = \"ph3 mt4 f6 link dim ba ph3 pv2 mb2 dib black\" href=\"#0\" onClick = {this.handleClick}>Click to upvote this match!</button>\n            </div>\n        )\n    }\n}\n\nexport default VoteButton;","import React, { Component } from 'react';\nimport TopBar from './components/TopNavBar';\nimport RightColumn from './components/RightColumn';\nimport LeftColumn from './components/LeftColumn';\nimport VoteButton from './components/VoteButton'\nimport './css/App.css';\nimport './css/tachyons.css';\n\nclass App extends Component {\n\n  // basic storage of left and right props\n  state = {\n    leftcolumn: {},\n    rightcolumn: {},\n    voteButton: {}\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <header className=\"App-header\">\n          <p>\n            Compare the store!\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n          </a>\n        </header>\n        <LeftColumn />\n        <RightColumn />\n        <VoteButton />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}